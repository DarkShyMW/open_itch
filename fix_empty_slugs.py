#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö slug —É –∂–∞–Ω—Ä–æ–≤
–ó–∞–ø—É—Å–∫: python fix_empty_slugs.py
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'indiedev_platform.settings')
django.setup()

from django.utils.text import slugify
from games.models import Genre

def main():
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö slug —É –∂–∞–Ω—Ä–æ–≤...")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∂–∞–Ω—Ä—ã
    all_genres = Genre.objects.all()
    print(f"üìä –í—Å–µ–≥–æ –∂–∞–Ω—Ä–æ–≤ –≤ –±–∞–∑–µ: {all_genres.count()}")
    
    # –ò—â–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∂–∞–Ω—Ä—ã
    problematic_genres = []
    for genre in all_genres:
        if not genre.slug or genre.slug.strip() == '':
            problematic_genres.append(genre)
    
    if not problematic_genres:
        print("‚úÖ –í—Å–µ –∂–∞–Ω—Ä—ã —É–∂–µ –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ slug!")
        return
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(problematic_genres)} –∂–∞–Ω—Ä–æ–≤ —Å –ø—É—Å—Ç—ã–º–∏ slug:")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –∂–∞–Ω—Ä
    for genre in problematic_genres:
        old_slug = genre.slug or "[–ø—É—Å—Ç–æ]"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π slug
        base_slug = slugify(genre.name)
        if not base_slug:
            base_slug = f"genre-{genre.id}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        new_slug = base_slug
        counter = 1
        while Genre.objects.filter(slug=new_slug).exclude(id=genre.id).exists():
            new_slug = f"{base_slug}-{counter}"
            counter += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        genre.slug = new_slug
        genre.save()
        
        print(f"   ‚úÖ {genre.name}: {old_slug} ‚Üí {new_slug}")
    
    print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {len(problematic_genres)} –∂–∞–Ω—Ä–æ–≤!")
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Django —Å–µ—Ä–≤–µ—Ä")

if __name__ == "__main__":
    main()
